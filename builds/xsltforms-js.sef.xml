<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" dmk="TGljZW5zb3I9U2F4b25pY2EKTGljZW5zZWU9TydOZWlsIERlbHByYXR0CkNvbXBhbnk9U2F4b25pY2EKRW1haWw9b25laWxAc2F4b25pY2EuY29tCkVkaXRpb249REUKU0FUPXllcwpTQVE9eWVzClNBVj15ZXMKSXNzdWVkPTIwMTYtMTEtMjMKU2VyaWVzPUQKU2VyaWFsPUQwMDUxNzgKVXNlcj1QMDAwMQpFdmFsdWF0aW9uPW5vCkV4cGlyYXRpb249MjAxNy0xMS0yMwpVcGdyYWRlRGF5cz0zNjYKTWFpbnRlbmFuY2VEYXlzPTM2NgpTaWduYXR1cmU9MzAyQzAyMTQyQkMxQzBDNTFCQUIxRkU4NTlBMzA1QjcwNzJFNkQ3ODVCNTIxNkIxMDIxNDIzRTM4MUUyMzYzM0QzMEVCMjEzQjNGRjIwMEQ3REQ5OTg0RkY0QzQK" expiry="2017-11-23" version="30" packageVersion="1" saxonVersion="9.8.0.5" target="JS" targetVersion="1" relocatable="true">
 <co id="0" binds="">
  <mode name="Q{}xforms-action" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="s" line="644" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}delete)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='delete';"/>
    <elem role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="646" name="delete" namespaces="rdf xhtml js in fn map array">
     <sequence>
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
       </fn>
       <elem line="648" name="ref" flags="l">
        <sequence>
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}ref" chk="0"/>
          </convert>
         </valueOf>
         <valueOf line="649" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}ref" chk="0"/>
          </convert>
         </valueOf>
        </sequence>
       </elem>
      </choose>
      <choose line="652">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
       </fn>
       <elem line="654" name="nodeset" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}nodeset" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="657">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
       </fn>
       <elem line="659" name="poition" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}position" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="662">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
       </fn>
       <elem line="664" name="at" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}at" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="667">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
       </fn>
       <elem line="669" name="if" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}if" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="672">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
       </fn>
       <elem line="674" name="while" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}while" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="s" line="608" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}insert)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='insert';"/>
    <elem role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="610" name="insert" namespaces="rdf xhtml js in fn map array">
     <sequence>
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
       </fn>
       <elem line="612" name="ref" flags="l">
        <sequence>
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}ref" chk="0"/>
          </convert>
         </valueOf>
         <valueOf line="613" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}ref" chk="0"/>
          </convert>
         </valueOf>
        </sequence>
       </elem>
      </choose>
      <choose line="616">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
       </fn>
       <elem line="618" name="nodeset" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}nodeset" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="621">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
       </fn>
       <elem line="623" name="poition" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}position" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="626">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
       </fn>
       <elem line="628" name="at" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}at" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="631">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
       </fn>
       <elem line="633" name="if" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}if" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
      <choose line="636">
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
       </fn>
       <elem line="638" name="while" flags="l">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}while" chk="0"/>
         </convert>
        </valueOf>
       </elem>
      </choose>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id="1" binds="1 1 1">
  <mode name="Q{}form-fill" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="9" flags="s" line="856" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="857">
     <param name="curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="858" name="position" slot="1">
      <int role="select" val="1"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <param line="859" name="xforms-doc" slot="2" as="document-node()?">
      <empty role="select"/>
      <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
       <check card="?" diag="8|0|XTTE0590|xforms-doc">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="861" var="isRepeatPath" as="xs:boolean" slot="3" eval="7">
      <gcEE op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <slash simple="1">
          <varRef name="xforms-doc" slot="2"/>
          <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}repeat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='repeat';"/>
         </slash>
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </slash>
       </data>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </fn>
      </gcEE>
      <sequence line="862">
       <choose>
        <varRef name="isRepeatPath" slot="3"/>
        <let line="863" var="vv:v0" as="xs:anyAtomicType?" slot="4" eval="13">
         <atomSing card="?" diag="0|0||fn:concat">
          <varRef name="curPath" slot="0"/>
         </atomSing>
         <forEach>
          <docOrder intra="1">
           <slash>
            <filter flags="b">
             <slash simple="1">
              <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
              <axis name="descendant" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='div';"/>
             </slash>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}data-ref" chk="0"/>
              <fn name="concat">
               <varRef name="vv:v0" slot="4"/>
               <fn name="local-name">
                <dot type="element(Q{}div)"/>
               </fn>
              </fn>
             </gc>
            </filter>
            <axis name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='div';"/>
           </slash>
          </docOrder>
          <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="864" name="ixsl:set-property" type="item()?">
           <str val="style.display"/>
           <str val="none"/>
           <dot type="element(Q{}div)"/>
          </ifCall>
         </forEach>
        </let>
       </choose>
       <message line="867">
        <sequence role="select">
         <valueOf>
          <str val="isRepeatPath =  "/>
         </valueOf>
         <valueOf>
          <convert from="xs:boolean" to="xs:string">
           <varRef name="isRepeatPath" slot="3"/>
          </convert>
         </valueOf>
         <valueOf>
          <str val="&#xA;            updatedPath ="/>
         </valueOf>
         <valueOf line="868">
          <fn name="concat">
           <atomSing card="?" diag="0|0||fn:concat">
            <varRef name="curPath" slot="0"/>
           </atomSing>
           <fn name="local-name">
            <dot type="element()"/>
           </fn>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <let line="874" var="updatedPath" as="xs:string" slot="5" eval="7">
        <choose>
         <or op="or">
          <varRef name="isRepeatPath" slot="3"/>
          <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <data>
            <varRef name="position" slot="1"/>
           </data>
           <int val="1"/>
          </gc>
         </or>
         <fn name="concat">
          <atomSing card="?" diag="0|0||fn:concat">
           <varRef name="curPath" slot="0"/>
          </atomSing>
          <fn name="local-name">
           <dot type="element()"/>
          </fn>
          <str val="["/>
          <atomSing card="?" diag="0|3||fn:concat">
           <varRef name="position" slot="1"/>
          </atomSing>
          <str val="]"/>
         </fn>
         <true/>
         <fn name="concat">
          <atomSing card="?" diag="0|0||fn:concat">
           <varRef name="curPath" slot="0"/>
          </atomSing>
          <fn name="local-name">
           <dot type="element()"/>
          </fn>
         </fn>
        </choose>
        <sequence line="876">
         <message>
          <sequence role="select">
           <valueOf>
            <str val="form-fill processing node:"/>
           </valueOf>
           <valueOf>
            <fn name="local-name">
             <dot type="element()"/>
            </fn>
           </valueOf>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <message line="877">
          <sequence role="select">
           <valueOf>
            <str val="form-fill updatedPath:"/>
           </valueOf>
           <valueOf>
            <varRef name="updatedPath" slot="5"/>
           </valueOf>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <applyT line="880" mode="Q{}form-fill" bSlot="0">
          <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          <withParam name="curPath" as="xs:string">
           <fn line="881" name="concat">
            <varRef name="updatedPath" slot="5"/>
            <str val="/"/>
           </fn>
          </withParam>
         </applyT>
         <let line="886" var="associated-form-control" as="node()*" slot="6" eval="3">
          <slash>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
           <fn name="key">
            <str val="Q{http://saxon.sf.net/}kk102"/>
            <varRef name="updatedPath" slot="5"/>
            <dot type="document-node()"/>
           </fn>
          </slash>
          <sequence line="891">
           <choose>
            <fn name="exists">
             <varRef name="associated-form-control" slot="6"/>
            </fn>
            <sequence line="892">
             <message>
              <sequence role="select">
               <valueOf>
                <str val="Found associated form control with id: "/>
               </valueOf>
               <valueOf line="893">
                <varRef name="updatedPath" slot="5"/>
               </valueOf>
              </sequence>
              <str role="terminate" val="no"/>
              <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
             </message>
             <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="896" name="ixsl:set-property" type="item()?">
              <str val="value"/>
              <fn name="normalize-space">
               <fn name="string-join">
                <data>
                 <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
                </data>
                <str val=""/>
               </fn>
              </fn>
              <check card="1" diag="0|2||ixsl:set-property">
               <varRef name="associated-form-control" slot="6"/>
              </check>
             </ifCall>
            </sequence>
            <true/>
            <message line="899">
             <sequence role="select">
              <valueOf>
               <str val="No associated form control with id: "/>
              </valueOf>
              <valueOf line="900">
               <varRef name="updatedPath" slot="5"/>
              </valueOf>
             </sequence>
             <str role="terminate" val="no"/>
             <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
            </message>
           </choose>
           <forEachGroup line="905" algorithm="by">
            <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <fn role="key" name="local-name">
             <dot type="element()"/>
            </fn>
            <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
            <choose role="content" line="908">
             <fn name="exists">
              <tail start="2">
               <currentGroup/>
              </tail>
             </fn>
             <let line="920" var="vv:v1" as="xs:string" slot="7" eval="13">
              <fn name="concat">
               <varRef name="updatedPath" slot="5"/>
               <str val="/"/>
              </fn>
              <sequence line="914">
               <message>
                <valueOf role="select">
                 <fn name="concat">
                  <fn name="count">
                   <currentGroup/>
                  </fn>
                  <str val=" elements named "/>
                  <check card="?" diag="0|2||fn:concat">
                   <currentGroupingKey/>
                  </check>
                 </fn>
                </valueOf>
                <str role="terminate" val="no"/>
                <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
               </message>
               <forEach line="917">
                <currentGroup/>
                <copy line="919" flags="cin">
                 <applyT role="content" mode="Q{}form-fill" bSlot="1">
                  <dot role="select"/>
                  <withParam name="curPath" as="xs:string">
                   <varRef line="920" name="vv:v1" slot="7"/>
                  </withParam>
                  <withParam name="position" as="xs:integer">
                   <fn line="921" name="position"/>
                  </withParam>
                  <withParam name="xforms-doc" as="document-node()?">
                   <varRef line="922" name="xforms-doc" slot="2"/>
                  </withParam>
                 </applyT>
                </copy>
               </forEach>
              </sequence>
             </let>
             <true/>
             <let line="934" var="vv:v2" as="xs:string" slot="8" eval="13">
              <fn name="concat">
               <varRef name="updatedPath" slot="5"/>
               <str val="/"/>
              </fn>
              <forEach line="931">
               <currentGroup/>
               <copy line="933" flags="cin">
                <applyT role="content" mode="Q{}form-fill" bSlot="2">
                 <dot role="select"/>
                 <withParam name="curPath" as="xs:string">
                  <varRef line="934" name="vv:v2" slot="8"/>
                 </withParam>
                 <withParam name="xforms-doc" as="document-node()?">
                  <varRef line="935" name="xforms-doc" slot="2"/>
                 </withParam>
                </applyT>
               </copy>
              </forEach>
             </let>
            </choose>
           </forEachGroup>
          </sequence>
         </let>
        </sequence>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="2" flags="s" line="948" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="949">
     <param name="curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <let line="950" var="updatedPath" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <atomSing card="?" diag="0|0||fn:concat">
        <varRef name="curPath" slot="0"/>
       </atomSing>
       <str val="@"/>
       <fn name="local-name">
        <dot type="attribute()"/>
       </fn>
      </fn>
      <sequence line="953">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="form-fill processing attribute node: "/>
         </valueOf>
         <valueOf line="954">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <message line="955">
        <sequence role="select">
         <valueOf>
          <str val="form-fill updatedPath: "/>
         </valueOf>
         <valueOf>
          <varRef name="updatedPath" slot="1"/>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <choose line="961">
        <fn name="exists">
         <slash line="958">
          <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
          <fn name="key">
           <str val="Q{http://saxon.sf.net/}kk102"/>
           <varRef name="updatedPath" slot="1"/>
           <dot type="document-node()"/>
          </fn>
         </slash>
        </fn>
        <sequence line="962">
         <message>
          <sequence role="select">
           <valueOf>
            <str val="Found associated form control with id: "/>
           </valueOf>
           <valueOf line="963">
            <varRef name="updatedPath" slot="1"/>
           </valueOf>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="964" name="ixsl:set-attribute" type="item()*">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
          <fn name="string">
           <dot type="attribute()"/>
          </fn>
         </ifCall>
        </sequence>
        <true/>
        <message line="968">
         <sequence role="select">
          <valueOf>
           <str val="No associated form control with id: "/>
          </valueOf>
          <valueOf line="969">
           <varRef name="updatedPath" slot="1"/>
          </valueOf>
         </sequence>
         <str role="terminate" val="no"/>
         <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
        </message>
       </choose>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="2" binds="">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onchange" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="s" line="115" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
    <message role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="116">
     <sequence role="select">
      <valueOf>
       <str val="Input box changed1 "/>
      </valueOf>
      <valueOf>
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}value" chk="0"/>
       </convert>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </templateRule>
  </mode>
 </co>
 <co id="3" binds="4">
  <mode name="Q{}form-check-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="978" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="980" flags="cin">
     <applyT role="content" mode="Q{}form-check" bSlot="0">
      <dot role="select" type="element()"/>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="4" binds="4 5 4 4 5">
  <mode name="Q{}form-check" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="6" flags="s" line="984" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="985">
     <param name="curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="986" name="position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <let line="993" var="updatedPath" as="xs:string" slot="2" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <str val="["/>
        <atomSing card="?" diag="0|3||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </fn>
      </choose>
      <sequence line="995">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="form-check processing node: "/>
         </valueOf>
         <valueOf>
          <fn name="local-name">
           <dot type="element()"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <message line="996">
        <sequence role="select">
         <valueOf>
          <str val="form-check updatedPath: "/>
         </valueOf>
         <valueOf>
          <varRef name="updatedPath" slot="2"/>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <applyT line="999" mode="Q{}form-check" bSlot="0">
        <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <withParam name="curPath" as="xs:string">
         <fn line="1000" name="concat">
          <varRef name="updatedPath" slot="2"/>
          <str val="/"/>
         </fn>
        </withParam>
       </applyT>
       <let line="1005" var="associated-form-control" as="node()*" slot="3" eval="3">
        <slash>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
         <fn name="key">
          <str val="Q{http://saxon.sf.net/}kk102"/>
          <varRef name="updatedPath" slot="2"/>
          <dot type="document-node()"/>
         </fn>
        </slash>
        <sequence line="1008">
         <choose>
          <fn name="exists">
           <varRef name="associated-form-control" slot="3"/>
          </fn>
          <sequence line="1009">
           <message>
            <sequence role="select">
             <valueOf>
              <str val="Found associated form control with id: "/>
             </valueOf>
             <valueOf line="1010">
              <varRef name="updatedPath" slot="2"/>
             </valueOf>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
           <valueOf line="1012">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <applyT mode="Q{}get-field" bSlot="1">
                 <varRef role="select" name="associated-form-control" slot="3"/>
                </applyT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </valueOf>
          </sequence>
          <true/>
          <valueOf line="1020">
           <fn name="normalize-space">
            <fn name="string-join">
             <data>
              <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
             </data>
             <str val=""/>
            </fn>
           </fn>
          </valueOf>
         </choose>
         <forEachGroup line="1025" algorithm="by">
          <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <fn role="key" name="local-name">
           <dot type="element()"/>
          </fn>
          <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
          <choose role="content" line="1028">
           <fn name="exists">
            <tail start="2">
             <currentGroup/>
            </tail>
           </fn>
           <let line="1040" var="vv:v0" as="xs:string" slot="4" eval="13">
            <fn name="concat">
             <varRef name="updatedPath" slot="2"/>
             <str val="/"/>
            </fn>
            <sequence line="1034">
             <message>
              <valueOf role="select">
               <fn name="concat">
                <fn name="count">
                 <currentGroup/>
                </fn>
                <str val=" elements named "/>
                <check card="?" diag="0|2||fn:concat">
                 <currentGroupingKey/>
                </check>
               </fn>
              </valueOf>
              <str role="terminate" val="no"/>
              <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
             </message>
             <forEach line="1037">
              <currentGroup/>
              <copy line="1039" flags="cin">
               <applyT role="content" mode="Q{}form-check" bSlot="2">
                <dot role="select"/>
                <withParam name="curPath" as="xs:string">
                 <varRef line="1040" name="vv:v0" slot="4"/>
                </withParam>
                <withParam name="position" as="xs:integer">
                 <fn line="1041" name="position"/>
                </withParam>
               </applyT>
              </copy>
             </forEach>
            </sequence>
           </let>
           <true/>
           <let line="1053" var="vv:v1" as="xs:string" slot="5" eval="13">
            <fn name="concat">
             <varRef name="updatedPath" slot="2"/>
             <str val="/"/>
            </fn>
            <forEach line="1050">
             <currentGroup/>
             <copy line="1052" flags="cin">
              <applyT role="content" mode="Q{}form-check" bSlot="3">
               <dot role="select"/>
               <withParam name="curPath" as="xs:string">
                <varRef line="1053" name="vv:v1" slot="5"/>
               </withParam>
              </applyT>
             </copy>
            </forEach>
           </let>
          </choose>
         </forEachGroup>
        </sequence>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="3" flags="s" line="1066" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="1067">
     <param name="curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <let line="1068" var="updatedPath" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <atomSing card="?" diag="0|0||fn:concat">
        <varRef name="curPath" slot="0"/>
       </atomSing>
       <str val="@"/>
       <fn name="local-name">
        <dot type="attribute()"/>
       </fn>
      </fn>
      <sequence line="1071">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="form-check processing attribute node: "/>
         </valueOf>
         <valueOf line="1072">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <message line="1073">
        <sequence role="select">
         <valueOf>
          <str val="form-check updatedPath: "/>
         </valueOf>
         <valueOf>
          <varRef name="updatedPath" slot="1"/>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <let line="1076" var="associated-form-control" as="node()*" slot="2" eval="3">
        <slash>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
         <fn name="key">
          <str val="Q{http://saxon.sf.net/}kk102"/>
          <varRef name="updatedPath" slot="1"/>
          <dot type="document-node()"/>
         </fn>
        </slash>
        <choose line="1079">
         <fn name="exists">
          <varRef name="associated-form-control" slot="2"/>
         </fn>
         <sequence line="1080">
          <message>
           <sequence role="select">
            <valueOf>
             <str val="Found associated form control with id: "/>
            </valueOf>
            <valueOf line="1081">
             <varRef name="updatedPath" slot="1"/>
            </valueOf>
           </sequence>
           <str role="terminate" val="no"/>
           <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
          </message>
          <compAtt line="1082">
           <fn role="name" name="local-name">
            <dot type="attribute()"/>
           </fn>
           <fn role="select" line="1084" name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <applyT mode="Q{}get-field" bSlot="4">
                <varRef role="select" name="associated-form-control" slot="2"/>
               </applyT>
              </mergeAdj>
             </data>
            </convert>
            <str val=""/>
           </fn>
          </compAtt>
         </sequence>
         <true/>
         <forEach line="1088">
          <dot type="attribute()"/>
          <copy flags="cin">
           <empty role="content"/>
          </copy>
         </forEach>
        </choose>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="6" binds="7 8 9">
  <template name="Q{}xformsjs-fill" flags="os" line="796" module="xsltforms-js.xsl" slots="5">
   <sequence role="body" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="797">
    <param name="instance-xml" slot="0" as="document-node()?">
     <empty role="select"/>
     <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|instance-xml">
      <check card="?" diag="8|0|XTTE0590|instance-xml">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="798" name="xforms-doc" slot="1" as="document-node()?">
     <empty role="select"/>
     <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
      <check card="?" diag="8|0|XTTE0590|xforms-doc">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="799" name="xFormsId" slot="2" as="xs:string">
     <str role="select" val="#xForm"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xFormsId">
      <check card="1" diag="8|0|XTTE0590|xFormsId">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="800" name="xforms-instance-id" slot="3">
     <str role="select" val="#xforms-jinstance"/>
     <supplied role="conversion" slot="3"/>
    </param>
    <choose line="803">
     <and op="and">
      <fn name="empty">
       <varRef name="instance-xml" slot="0"/>
      </fn>
      <fn name="empty">
       <varRef name="xforms-doc" slot="1"/>
      </fn>
     </and>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="807" name="ixsl:call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="ixsl:window" type="item()?"/>
      </check>
      <str val="alert"/>
      <arrayBlock>
       <str val="App error: must supply either $instance-xml or $xforms-doc to xformsjs-fill"/>
      </arrayBlock>
     </ifCall>
     <true/>
     <let line="810" var="instance-doc" as="document-node()" slot="4" eval="7">
      <doc line="812" validation="preserve">
       <choose>
        <fn name="empty">
         <varRef name="instance-xml" slot="0"/>
        </fn>
        <copyOf line="814" flags="vc">
         <slash>
          <slash>
           <slash>
            <slash simple="1">
             <varRef name="xforms-doc" slot="1"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
            </slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
           </slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
          </slash>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
        </copyOf>
        <true/>
        <copyOf line="817" flags="vc">
         <varRef name="instance-xml" slot="0"/>
        </copyOf>
       </choose>
      </doc>
      <sequence line="821">
       <applyT mode="Q{}form-fill-initial" bSlot="0">
        <varRef role="select" name="instance-doc" slot="4"/>
        <withParam name="xforms-doc" as="document-node()?">
         <varRef line="822" name="xforms-doc" slot="1"/>
        </withParam>
       </applyT>
       <choose line="826">
        <fn name="exists">
         <varRef name="instance-doc" slot="4"/>
        </fn>
        <resultDoc line="832" global="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;indent=no&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xA;encoding=utf-8&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xA;omit-xml-declaration=no&#xA;method=html&#xA;" local="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
         <fn role="href" name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <mergeAdj>
             <varRef name="xforms-instance-id" slot="3"/>
            </mergeAdj>
           </data>
          </convert>
          <str val=" "/>
         </fn>
         <valueOf role="content" line="834">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <data>
             <fn name="xml-to-json">
              <ufCall name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" tailCall="false" bSlot="1" eval="4">
               <doc line="829" validation="preserve">
                <elem name="wrapper" flags="l" namespaces="rdf xhtml js in fn map array">
                 <varRef name="instance-doc" slot="4"/>
                </elem>
               </doc>
              </ufCall>
             </fn>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </resultDoc>
       </choose>
       <message line="838">
        <sequence role="select">
         <valueOf>
          <str val=" xformsjs-fill instance-jxml="/>
         </valueOf>
         <valueOf line="840">
          <fn name="serialize">
           <ufCall name="Q{http://www.w3.org/2002/xforms}convert-json-to-xml" tailCall="false" bSlot="2" eval="4">
            <check card="1" diag="0|0||xforms:convert-json-to-xml">
             <cvUntyped to="xs:string">
              <data>
               <docOrder intra="1">
                <slash>
                 <slash>
                  <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
                  <fn name="key">
                   <str val="Q{http://saxon.sf.net/}kk101"/>
                   <str val="xforms-jinstance"/>
                   <dot type="document-node()"/>
                  </fn>
                 </slash>
                 <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
                </slash>
               </docOrder>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
      </sequence>
     </let>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="10" binds="8 9 11">
  <template name="Q{}xformsjs-main" flags="os" line="19" module="xsltforms-js.xsl" slots="9">
   <sequence role="body" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="20">
    <param name="xforms-doc" slot="0" as="document-node()?">
     <empty role="select"/>
     <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
      <check card="?" diag="8|0|XTTE0590|xforms-doc">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="21" name="xforms-file" slot="1" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xforms-file">
      <check card="?" diag="8|0|XTTE0590|xforms-file">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="22" name="instance-xml" slot="2" as="document-node()?">
     <empty role="select"/>
     <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|instance-xml">
      <check card="?" diag="8|0|XTTE0590|instance-xml">
       <supplied slot="2"/>
      </check>
     </treat>
    </param>
    <param line="23" name="xFormsId" slot="3" as="xs:string">
     <str role="select" val="#xForm"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xFormsId">
      <check card="1" diag="8|0|XTTE0590|xFormsId">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="3"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="24" name="xforms-instance-id" slot="4">
     <str role="select" val="#xforms-jinstance"/>
     <supplied role="conversion" slot="4"/>
    </param>
    <let line="32" var="xforms-doci" as="document-node()?" slot="5" eval="7">
     <choose>
      <fn name="empty">
       <varRef name="xforms-doc" slot="0"/>
      </fn>
      <fn name="doc">
       <varRef name="xforms-file" slot="1"/>
      </fn>
      <true/>
      <varRef name="xforms-doc" slot="0"/>
     </choose>
     <let line="34" var="instance-doc" as="document-node()" slot="6" eval="7">
      <doc line="36" validation="preserve">
       <choose>
        <fn name="empty">
         <varRef name="instance-xml" slot="2"/>
        </fn>
        <copyOf line="37" flags="vc">
         <slash>
          <slash>
           <slash>
            <slash simple="1">
             <varRef name="xforms-doci" slot="5"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
            </slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
           </slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
          </slash>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
        </copyOf>
        <true/>
        <copyOf line="40" flags="vc">
         <varRef name="instance-xml" slot="2"/>
        </copyOf>
       </choose>
      </doc>
      <let line="45" var="bindings" as="map(xs:string, node())" slot="7" eval="7">
       <treat line="47" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|bindings">
        <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:merge" type="map(*)">
         <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="18|0|XTTE3375|">
          <forEach>
           <slash>
            <slash>
             <slash simple="1">
              <varRef name="xforms-doci" slot="5"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
             </slash>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
            </slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}bind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='bind';"/>
           </slash>
           <let line="49" var="xnodeset" as="node()?" slot="8" eval="7">
            <treat line="50" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|xnodeset">
             <check card="?" diag="3|0|XTTE0570|xnodeset">
              <evaluate dxns="">
               <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
                <cvUntyped to="xs:string">
                 <attVal name="Q{}nodeset" chk="0"/>
                </cvUntyped>
               </check>
               <varRef role="cxt" name="instance-doc" slot="6"/>
               <str role="sa" val="no"/>
               <map role="wp" size="0"/>
              </evaluate>
             </check>
            </treat>
            <sequence line="53">
             <choose>
              <fn name="empty">
               <varRef name="xnodeset" slot="8"/>
              </fn>
              <message line="54">
               <sequence role="select">
                <valueOf>
                 <str val="xformsbind is empty nodeste = "/>
                </valueOf>
                <valueOf line="55">
                 <fn name="serialize">
                  <dot type="element(Q{http://www.w3.org/2002/xforms}bind)"/>
                 </fn>
                </valueOf>
               </sequence>
               <str role="terminate" val="no"/>
               <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
              </message>
             </choose>
             <ifCall line="63" name="map:entry" type="map(*)">
              <check card="1" diag="0|0||map:entry">
               <cast as="xs:string" emptiable="1">
                <choose>
                 <fn name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                 <attVal name="Q{}id" chk="0"/>
                 <true/>
                 <attVal name="Q{}nodeset" chk="0"/>
                </choose>
               </cast>
              </check>
              <dot type="element(Q{http://www.w3.org/2002/xforms}bind)"/>
             </ifCall>
            </sequence>
           </let>
          </forEach>
         </treat>
         <map size="2">
          <str val="duplicates"/>
          <str val="reject"/>
          <str val="duplicates-error-code"/>
          <str val="XTDE3365"/>
         </map>
        </ifCall>
       </treat>
       <sequence line="86">
        <choose>
         <fn name="exists">
          <varRef name="instance-doc" slot="6"/>
         </fn>
         <resultDoc line="94" global="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;indent=no&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xA;encoding=utf-8&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xA;omit-xml-declaration=no&#xA;method=html&#xA;" local="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
          <fn role="href" name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <data>
             <mergeAdj>
              <varRef name="xforms-instance-id" slot="4"/>
             </mergeAdj>
            </data>
           </convert>
           <str val=" "/>
          </fn>
          <valueOf role="content" line="95">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <fn name="xml-to-json">
               <ufCall name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" tailCall="false" bSlot="0" eval="4">
                <doc line="91" validation="preserve">
                 <elem name="wrapper" flags="l" namespaces="rdf xhtml js in fn map array">
                  <varRef name="instance-doc" slot="6"/>
                 </elem>
                </doc>
               </ufCall>
              </fn>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
         </resultDoc>
        </choose>
        <message line="99">
         <sequence role="select">
          <valueOf>
           <str val=" instance-jxml="/>
          </valueOf>
          <valueOf line="101">
           <fn name="serialize">
            <ufCall name="Q{http://www.w3.org/2002/xforms}convert-json-to-xml" tailCall="false" bSlot="1" eval="4">
             <check card="1" diag="0|0||xforms:convert-json-to-xml">
              <cvUntyped to="xs:string">
               <data>
                <docOrder intra="1">
                 <slash>
                  <slash>
                   <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
                   <fn name="key">
                    <str val="Q{http://saxon.sf.net/}kk101"/>
                    <str val="xforms-jinstance"/>
                    <dot type="document-node()"/>
                   </fn>
                  </slash>
                  <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
                 </slash>
                </docOrder>
               </data>
              </cvUntyped>
             </check>
            </ufCall>
           </fn>
          </valueOf>
         </sequence>
         <str role="terminate" val="no"/>
         <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
        </message>
        <resultDoc line="104" global="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;indent=no&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xA;encoding=utf-8&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xA;omit-xml-declaration=no&#xA;method=html&#xA;" local="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
         <varRef role="href" name="xFormsId" slot="3"/>
         <applyT role="content" line="105" bSlot="2">
          <slash role="select" simple="1">
           <varRef name="xforms-doci" slot="5"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
          </slash>
          <withParam name="instance1" as="document-node()">
           <varRef line="106" name="instance-doc" slot="6"/>
          </withParam>
          <withParam name="bindings" as="map(xs:string, node())">
           <varRef line="107" name="bindings" slot="7"/>
          </withParam>
          <withParam name="submissions" as="map(xs:string, xs:string)">
           <treat line="72" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|submissions">
            <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:merge" type="map(*)">
             <forEach>
              <slash>
               <slash>
                <slash simple="1">
                 <varRef name="xforms-doci" slot="5"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                </slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}submission)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submission';"/>
              </slash>
              <ifCall line="73" name="map:entry" type="map(*)">
               <check card="1" diag="0|0||map:entry">
                <cast as="xs:string" emptiable="1">
                 <attVal name="Q{}ref" chk="0"/>
                </cast>
               </check>
               <cast as="xs:string" emptiable="1">
                <attVal name="Q{}action" chk="0"/>
               </cast>
              </ifCall>
             </forEach>
             <map size="2">
              <str val="duplicates"/>
              <str val="reject"/>
              <str val="duplicates-error-code"/>
              <str val="XTDE3365"/>
             </map>
            </ifCall>
           </treat>
          </withParam>
         </applyT>
        </resultDoc>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="12" binds="3 9 13">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="146" module="xsltforms-js.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="146" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
     </fn>
    </p.withPredicate>
    <let role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="151" var="updatedInstanceXML" as="document-node()" slot="0" eval="7">
     <doc line="153" validation="preserve">
      <applyT mode="Q{}form-check-initial" bSlot="0">
       <ufCall role="select" line="149" name="Q{http://www.w3.org/2002/xforms}convert-json-to-xml" tailCall="false" bSlot="1" eval="4">
        <check card="1" diag="0|0||xforms:convert-json-to-xml">
         <cvUntyped to="xs:string">
          <data>
           <docOrder intra="1">
            <slash>
             <slash>
              <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
              <fn name="key">
               <str val="Q{http://saxon.sf.net/}kk101"/>
               <str val="xforms-jinstance"/>
               <dot type="document-node()"/>
              </fn>
             </slash>
             <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
            </slash>
           </docOrder>
          </data>
         </cvUntyped>
        </check>
       </ufCall>
      </applyT>
     </doc>
     <let line="160" var="required-fields-check" as="item()*" slot="1" eval="3">
      <ufCall name="Q{http://www.w3.org/2002/xforms}check-required-fields" tailCall="false" bSlot="2" eval="6">
       <varRef name="updatedInstanceXML" slot="0"/>
      </ufCall>
      <choose line="172">
       <fn name="empty">
        <varRef name="required-fields-check" slot="1"/>
       </fn>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="175" name="ixsl:call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="ixsl:window" type="item()?"/>
        </check>
        <str val="submitXMLorderWithUrl"/>
        <arrayBlock>
         <fn name="serialize">
          <doc line="166" flags="t" validation="preserve">
           <valueOf flags="l">
            <convert from="xs:untypedAtomic" to="xs:string">
             <attVal name="Q{}data-submit" chk="0"/>
            </convert>
           </valueOf>
          </doc>
         </fn>
         <fn name="serialize">
          <varRef name="updatedInstanceXML" slot="0"/>
         </fn>
         <str val="orderResponse"/>
        </arrayBlock>
       </ifCall>
       <true/>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="188" name="ixsl:call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="ixsl:window" type="item()?"/>
        </check>
        <str val="alert"/>
        <arrayBlock>
         <fn name="serialize">
          <doc line="179" flags="t" validation="preserve">
           <forEach>
            <varRef name="required-fields-check" slot="1"/>
            <valueOf line="183" flags="l">
             <fn name="concat">
              <str val="Value error see: "/>
              <fn name="serialize">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                 <dot line="180"/>
                </treat>
                <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
               </slash>
              </fn>
              <str val="&#xA;"/>
             </fn>
            </valueOf>
           </forEach>
          </doc>
         </fn>
        </arrayBlock>
       </ifCall>
      </choose>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="7" binds="1">
  <mode name="Q{}form-fill-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="849" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="850">
     <param name="xforms-doc" slot="0" as="document-node()?">
      <empty role="select"/>
      <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
       <check card="?" diag="8|0|XTTE0590|xforms-doc">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <applyT line="851" mode="Q{}form-fill" flags="t" bSlot="0">
      <dot role="select" type="element()"/>
      <withParam name="xforms-doc" as="document-node()?">
       <varRef line="852" name="xforms-doc" slot="0"/>
      </withParam>
     </applyT>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="14" binds="14 14 14">
  <mode name="Q{}jxml-xml" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="2" flags="s" line="779" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:array" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='array'"/>
    <let role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="780" var="kayVar" as="attribute(Q{}key)?" slot="0" eval="8">
     <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     <let line="783" var="vv:v0" as="xs:string" slot="1" eval="13">
      <fn name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <varRef name="kayVar" slot="0"/>
        </data>
       </convert>
      </fn>
      <forEach line="782">
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       <compElem line="783">
        <varRef role="name" name="vv:v0" slot="1"/>
        <applyT role="content" line="784" mode="Q{}jxml-xml" bSlot="0">
         <dot role="select" type="element()"/>
        </applyT>
       </compElem>
      </forEach>
     </let>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="773" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:number" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='number'"/>
    <compElem role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="774">
     <fn role="name" name="string">
      <convert from="xs:untypedAtomic" to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </convert>
     </fn>
     <valueOf role="content" line="775" flags="l">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </compElem>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="773" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:string" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='string'"/>
    <compElem role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="774">
     <fn role="name" name="string">
      <convert from="xs:untypedAtomic" to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </convert>
     </fn>
     <valueOf role="content" line="775" flags="l">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </compElem>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="757" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:map" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='map'"/>
    <choose role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="759">
     <fn name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
     <applyT line="761" mode="Q{}jxml-xml" flags="t" bSlot="1">
      <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </applyT>
     <true/>
     <compElem line="765">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <applyT role="content" line="766" mode="Q{}jxml-xml" bSlot="2">
       <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </applyT>
     </compElem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="13" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-required-fields" line="119" module="xsltforms-js.xsl" eval="8" flags="pU" as="item()*" slots="3">
   <arg name="updatedInstanceXML" as="item()*"/>
   <let role="body" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="131" var="vv:v0" as="item()?" slot="1" eval="13">
    <check card="?" diag="4|0|XTTE3210|xsl:evaluate/context-item">
     <varRef name="updatedInstanceXML" slot="0"/>
    </check>
    <forEach line="126">
     <filter line="122" flags="b">
      <slash simple="1">
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
       <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </slash>
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
      </fn>
     </filter>
     <let line="128" var="resulti" as="document-node()" slot="2" eval="7">
      <doc line="131" validation="preserve">
       <evaluate dxns="">
        <fn role="xpath" name="concat">
         <str val="boolean(normalize-space("/>
         <attVal name="Q{}id" chk="0"/>
         <str val="))"/>
         <str val="="/>
         <attVal name="Q{}id" chk="0"/>
         <str val="/"/>
         <attVal name="Q{}data-required" chk="0"/>
        </fn>
        <varRef role="cxt" name="vv:v0" slot="1"/>
        <str role="sa" val="no"/>
        <map role="wp" size="0"/>
       </evaluate>
      </doc>
      <choose line="139">
       <vc op="eq" onEmpty="0" comp="CCC">
        <cast as="xs:string" emptiable="0">
         <data>
          <varRef name="resulti" slot="2"/>
         </data>
        </cast>
        <str val="false"/>
       </vc>
       <dot type="element()"/>
      </choose>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="15" binds="">
  <mode name="Q{}item" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="3" flags="s" line="440" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="441">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="442" name="nodeset" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="443" var="selectedVar" as="document-node()" slot="2" eval="7">
      <doc line="444" validation="preserve">
       <evaluate dxns="">
        <fn role="xpath" name="concat">
         <varRef name="nodeset" slot="1"/>
         <atomSing card="?" diag="0|1||fn:concat">
          <slash>
           <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
           <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
          </slash>
         </atomSing>
        </fn>
        <varRef role="cxt" name="instance1" slot="0"/>
        <str role="sa" val="no"/>
        <map role="wp" size="0"/>
       </evaluate>
      </doc>
      <elem line="448" name="option" namespaces="rdf xhtml js in fn map array">
       <sequence>
        <att name="value" flags="l">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </att>
        <choose line="449">
         <and op="and">
          <fn name="exists">
           <varRef name="instance1" slot="0"/>
          </fn>
          <gcEE op="=" card="N:1" comp="CCC">
           <data>
            <slash>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
             <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
            </slash>
           </data>
           <data>
            <varRef name="selectedVar" slot="2"/>
           </data>
          </gcEE>
         </and>
         <att line="450" name="selected" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <varRef name="selectedVar" slot="2"/>
           </data>
          </convert>
         </att>
        </choose>
        <valueOf line="453" flags="l">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="16" binds="16 16 16">
  <mode name="Q{}json-xml" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="691" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <choose role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="693">
     <fn name="exists">
      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </fn>
     <forEachGroup line="694" algorithm="by">
      <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      <fn role="key" name="local-name">
       <dot type="element()"/>
      </fn>
      <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
      <choose role="content" line="696">
       <fn name="exists">
        <tail start="2">
         <currentGroup/>
        </tail>
       </fn>
       <elem line="699" name="array" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <currentGroupingKey/>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <forEach line="700">
          <currentGroup/>
          <elem line="703" name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl">
           <applyT mode="Q{}json-xml" bSlot="0">
            <dot role="select"/>
           </applyT>
          </elem>
         </forEach>
        </sequence>
       </elem>
       <fn line="710" name="exists">
        <slash>
         <currentGroup/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </fn>
       <elem line="713" name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <currentGroupingKey/>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <applyT line="714" mode="Q{}json-xml" bSlot="1">
          <currentGroup role="select"/>
         </applyT>
        </sequence>
       </elem>
       <true/>
       <applyT line="719" mode="Q{}json-xml" bSlot="2">
        <currentGroup role="select"/>
       </applyT>
      </choose>
     </forEachGroup>
     <castable line="725" as="xs:int" emptiable="0">
      <dot type="element()"/>
     </castable>
     <elem line="727" name="number" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
      <sequence>
       <att name="key" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </att>
       <valueOf line="728" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <mergeAdj>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </mergeAdj>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
     <castable line="731" as="xs:string" emptiable="0">
      <dot type="element()"/>
     </castable>
     <elem line="733" name="string" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
      <sequence>
       <att name="key" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </att>
       <valueOf line="734" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <mergeAdj>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </mergeAdj>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="9" binds="14">
  <function name="Q{http://www.w3.org/2002/xforms}convert-json-to-xml" line="743" module="xsltforms-js.xsl" eval="7" flags="pU" as="node()" slots="2">
   <arg name="jinstance" as="xs:string"/>
   <let role="body" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="749" var="result" as="document-node()" slot="1" eval="7">
    <doc line="751" validation="preserve">
     <applyT mode="Q{}jxml-xml" bSlot="0">
      <doc role="select" line="746" validation="preserve">
       <fn name="json-to-xml">
        <varRef name="jinstance" slot="0"/>
       </fn>
      </doc>
     </applyT>
    </doc>
    <varRef line="754" name="result" slot="1"/>
   </let>
  </function>
 </co>
 <co id="8" binds="16">
  <function name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" line="680" module="xsltforms-js.xsl" eval="7" flags="pU" as="node()" slots="2">
   <arg name="xinstance" as="node()"/>
   <let role="body" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="682" var="rep-xml" as="document-node()" slot="1" eval="7">
    <doc line="684" validation="preserve">
     <elem name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl">
      <applyT mode="Q{}json-xml" bSlot="0">
       <varRef role="select" name="xinstance" slot="0"/>
      </applyT>
     </elem>
    </doc>
    <varRef line="687" name="rep-xml" slot="1"/>
   </let>
  </function>
 </co>
 <co id="5" binds="">
  <mode name="Q{}get-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="0" flags="s" line="1108" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="1111" name="ixsl:get" type="item()*">
     <dot type="*:textarea"/>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="1103" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="1105" name="ixsl:get" type="item()*">
     <check card="?" diag="0|0||ixsl:get">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <ifCall name="ixsl:get" type="item()*">
          <dot type="element(Q{}option)"/>
          <str val="selected"/>
         </ifCall>
        </data>
        <true/>
       </gcEE>
      </filter>
     </check>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="1097" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="1100" name="ixsl:get" type="item()*">
     <dot type="*:input"/>
     <str val="value"/>
    </ifCall>
   </templateRule>
  </mode>
 </co>
 <co id="11" binds="11 11 15 11 11 11 11 11 11 0 8 8 11 11 11 11">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="0" flags="s" line="198" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <applyT role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="199" flags="t" bSlot="0">
     <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="3" flags="s" line="373" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="374">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="375" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="377" name="nodeset" slot="2" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="2"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <applyT line="379" bSlot="1">
      <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
     </applyT>
     <elem line="381" name="select" namespaces="rdf xhtml js in fn map array">
      <sequence>
       <copyOf flags="vc">
        <filter flags="b">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <vc op="ne" comp="CCC">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
          <str val="ref"/>
         </vc>
        </filter>
       </copyOf>
       <choose line="382">
        <and op="and">
         <fn name="exists">
          <varRef name="instance1" slot="0"/>
         </fn>
         <fn name="exists">
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </fn>
        </and>
        <att line="383" name="data-ref" flags="l">
         <fn name="concat">
          <varRef name="nodeset" slot="2"/>
          <attVal name="Q{}ref" chk="0"/>
         </fn>
        </att>
       </choose>
       <choose line="385">
        <vc op="eq" onEmpty="0" comp="CCC">
         <fn name="local-name">
          <dot type="element()"/>
         </fn>
         <str val="select"/>
        </vc>
        <sequence line="388">
         <att name="multiple" flags="l">
          <str val="true"/>
         </att>
         <att name="size" flags="l">
          <convert from="xs:integer" to="xs:string">
           <fn name="count">
            <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
           </fn>
          </convert>
         </att>
        </sequence>
       </choose>
       <applyT line="391" mode="Q{}item" bSlot="2">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        <withParam name="instance1" as="node()?">
         <varRef line="392" name="instance1" slot="0"/>
        </withParam>
        <withParam name="nodeset" as="xs:string">
         <varRef line="393" name="nodeset" slot="2"/>
        </withParam>
       </applyT>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="6" rank="1" minImp="0" slots="0" flags="s" line="371" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="s" line="196" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="12" rank="1" minImp="0" slots="4" flags="s" line="493" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}submit)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submit';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="494">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="495" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="496" name="submissions" slot="2" as="map(xs:string, xs:string)">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="497" var="innerbody" as="document-node()" slot="3" eval="7">
      <doc line="499" validation="preserve">
       <choose>
        <fn name="exists">
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
        </fn>
        <applyT line="500" bSlot="3">
         <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
         <withParam name="instance1" as="node()?">
          <varRef line="501" name="instance1" slot="0"/>
         </withParam>
         <withParam name="bindings" as="map(xs:string, node())">
          <varRef line="502" name="bindings" slot="1"/>
         </withParam>
        </applyT>
        <true/>
        <valueOf line="506" flags="l">
         <str val=" "/>
        </valueOf>
       </choose>
      </doc>
      <choose line="512">
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}appearance" chk="0"/>
        <str val="minimal"/>
       </gc>
       <elem line="514" name="a" namespaces="rdf xhtml js in fn map array">
        <copyOf flags="vc">
         <varRef name="innerbody" slot="3"/>
        </copyOf>
       </elem>
       <true/>
       <elem line="518" name="button" namespaces="rdf xhtml js in fn map array">
        <sequence>
         <att name="type" flags="l">
          <str val="button"/>
         </att>
         <copyOf line="519" flags="vc">
          <filter flags="b">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
           <vc op="ne" comp="CCC">
            <fn name="local-name">
             <dot type="attribute()"/>
            </fn>
            <str val="ref"/>
           </vc>
          </filter>
         </copyOf>
         <choose line="520">
          <and op="and">
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
           </fn>
           <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:contains" type="xs:boolean">
            <varRef name="submissions" slot="2"/>
            <atomSing diag="0|1||map:contains">
             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
            </atomSing>
           </ifCall>
          </and>
          <att line="521" name="data-action" flags="l">
           <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
            <varRef name="submissions" slot="2"/>
            <atomSing diag="0|1||map:get">
             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
            </atomSing>
           </ifCall>
          </att>
         </choose>
         <copyOf line="523" flags="vc">
          <varRef name="innerbody" slot="3"/>
         </copyOf>
        </sequence>
       </elem>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="221" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/xhtml}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="223" name="html" namespaces="rdf xhtml js in fn map array">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="225" name="head" flags="l" namespaces="rdf xhtml js in fn map array">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="226" name="meta" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="228">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="230" name="meta" flags="l" namespaces="rdf xhtml js in fn map array">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="235" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="238" name="body" flags="l" namespaces="rdf xhtml js in fn map array">
       <applyT bSlot="4">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="3" flags="s" line="373" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select1)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select1';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="374">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="375" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="377" name="nodeset" slot="2" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="2"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <applyT line="379" bSlot="1">
      <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
     </applyT>
     <elem line="381" name="select" namespaces="rdf xhtml js in fn map array">
      <sequence>
       <copyOf flags="vc">
        <filter flags="b">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <vc op="ne" comp="CCC">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
          <str val="ref"/>
         </vc>
        </filter>
       </copyOf>
       <choose line="382">
        <and op="and">
         <fn name="exists">
          <varRef name="instance1" slot="0"/>
         </fn>
         <fn name="exists">
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </fn>
        </and>
        <att line="383" name="data-ref" flags="l">
         <fn name="concat">
          <varRef name="nodeset" slot="2"/>
          <attVal name="Q{}ref" chk="0"/>
         </fn>
        </att>
       </choose>
       <choose line="385">
        <vc op="eq" onEmpty="0" comp="CCC">
         <fn name="local-name">
          <dot type="element()"/>
         </fn>
         <str val="select"/>
        </vc>
        <sequence line="388">
         <att name="multiple" flags="l">
          <str val="true"/>
         </att>
         <att name="size" flags="l">
          <convert from="xs:integer" to="xs:string">
           <fn name="count">
            <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
           </fn>
          </convert>
         </att>
        </sequence>
       </choose>
       <applyT line="391" mode="Q{}item" bSlot="2">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        <withParam name="instance1" as="node()?">
         <varRef line="392" name="instance1" slot="0"/>
        </withParam>
        <withParam name="nodeset" as="xs:string">
         <varRef line="393" name="nodeset" slot="2"/>
        </withParam>
       </applyT>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="221" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="223" name="html" namespaces="rdf xhtml js in fn map array">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="225" name="head" flags="l" namespaces="rdf xhtml js in fn map array">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="226" name="meta" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="228">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="230" name="meta" flags="l" namespaces="rdf xhtml js in fn map array">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="235" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="238" name="body" flags="l" namespaces="rdf xhtml js in fn map array">
       <applyT bSlot="4">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="7" flags="s" line="245" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='input';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="246">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="247" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="249" name="nodeset" slot="2" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="2"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <message line="250">
      <sequence role="select">
       <valueOf flags="S">
        <str val="xforms:input="/>
       </valueOf>
       <valueOf>
        <fn name="serialize">
         <varRef name="instance1" slot="0"/>
        </fn>
       </valueOf>
       <valueOf>
        <str val=" ref= "/>
       </valueOf>
       <valueOf line="251">
        <convert from="xs:untypedAtomic" to="xs:string">
         <attVal name="Q{}ref" chk="0"/>
        </convert>
       </valueOf>
       <valueOf>
        <str val=", "/>
       </valueOf>
       <valueOf line="251">
        <fn name="serialize">
         <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
        </fn>
       </valueOf>
       <valueOf>
        <str val=" nodeset = "/>
       </valueOf>
       <valueOf line="252">
        <varRef name="nodeset" slot="2"/>
       </valueOf>
      </sequence>
      <str role="terminate" val="no"/>
      <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
     </message>
     <let line="254" var="refi" as="xs:string" slot="3" eval="8">
      <fn name="concat">
       <varRef name="nodeset" slot="2"/>
       <attVal name="Q{}ref" chk="0"/>
      </fn>
      <sequence line="261">
       <applyT bSlot="5">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </applyT>
       <let line="263" var="hints" as="text()*" slot="4" eval="3">
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
         <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
        </slash>
        <let line="264" var="ref-binding" as="xs:string" slot="5" eval="7">
         <choose line="266">
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
          </fn>
          <cvUntyped line="267" to="xs:string">
           <cast as="xs:untypedAtomic" emptiable="0">
            <fn name="string">
             <convert from="xs:untypedAtomic" to="xs:string">
              <attVal name="Q{}ref" chk="0"/>
             </convert>
            </fn>
           </cast>
          </cvUntyped>
          <fn line="269" name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
          </fn>
          <cvUntyped line="270" to="xs:string">
           <cast as="xs:untypedAtomic" emptiable="0">
            <fn name="string">
             <convert from="xs:untypedAtomic" to="xs:string">
              <attVal name="Q{}bind" chk="0"/>
             </convert>
            </fn>
           </cast>
          </cvUntyped>
          <true/>
          <str val=""/>
         </choose>
         <sequence line="279">
          <message>
           <sequence role="select">
            <valueOf>
             <str val="xforms:ref-binding= "/>
            </valueOf>
            <valueOf>
             <varRef name="ref-binding" slot="5"/>
            </valueOf>
           </sequence>
           <str role="terminate" val="no"/>
           <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
          </message>
          <let line="287" var="bindingi" as="node()?" slot="6" eval="7">
           <choose>
            <fn name="empty">
             <varRef name="ref-binding" slot="5"/>
            </fn>
            <empty/>
            <true/>
            <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
             <varRef name="bindings" slot="1"/>
             <varRef name="ref-binding" slot="5"/>
            </ifCall>
           </choose>
           <elem line="289" name="input" namespaces="rdf xhtml js in fn map array">
            <sequence>
             <choose>
              <and op="and">
               <fn name="exists">
                <varRef name="bindingi" slot="6"/>
               </fn>
               <fn name="exists">
                <slash simple="1">
                 <varRef name="bindingi" slot="6"/>
                 <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                </slash>
               </fn>
              </and>
              <att line="290" name="data-required" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash simple="1">
                  <varRef name="bindingi" slot="6"/>
                  <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                 </slash>
                </data>
               </convert>
              </att>
             </choose>
             <choose line="292">
              <and op="and">
               <fn name="exists">
                <varRef name="bindingi" slot="6"/>
               </fn>
               <fn name="exists">
                <slash simple="1">
                 <varRef name="bindingi" slot="6"/>
                 <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                </slash>
               </fn>
              </and>
              <att line="293" name="data-relevant" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash simple="1">
                  <varRef name="bindingi" slot="6"/>
                  <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                 </slash>
                </data>
               </convert>
              </att>
             </choose>
             <choose line="295">
              <fn name="exists">
               <varRef name="bindingi" slot="6"/>
              </fn>
              <message line="296">
               <sequence role="select">
                <valueOf>
                 <str val="binding found! : "/>
                </valueOf>
                <valueOf line="297">
                 <fn name="serialize">
                  <varRef name="bindingi" slot="6"/>
                 </fn>
                </valueOf>
               </sequence>
               <str role="terminate" val="no"/>
               <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
              </message>
             </choose>
             <choose line="306">
              <choose>
               <fn name="exists">
                <varRef name="bindingi" slot="6"/>
               </fn>
               <vc op="eq" comp="EQC">
                <cast as="xs:QName" emptiable="1">
                 <data>
                  <slash simple="1">
                   <varRef name="bindingi" slot="6"/>
                   <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                  </slash>
                 </data>
                </cast>
                <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="date"/>
               </vc>
               <true/>
               <false/>
              </choose>
              <att line="307" name="type" flags="l">
               <str val="date"/>
              </att>
              <choose line="314">
               <fn name="exists">
                <varRef name="bindingi" slot="6"/>
               </fn>
               <vc op="eq" comp="EQC">
                <cast as="xs:QName" emptiable="1">
                 <data>
                  <slash simple="1">
                   <varRef name="bindingi" slot="6"/>
                   <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                  </slash>
                 </data>
                </cast>
                <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="time"/>
               </vc>
               <true/>
               <false/>
              </choose>
              <att line="315" name="type" flags="l">
               <str val="time"/>
              </att>
              <choose line="322">
               <fn name="exists">
                <varRef name="bindingi" slot="6"/>
               </fn>
               <vc op="eq" comp="EQC">
                <cast as="xs:QName" emptiable="1">
                 <data>
                  <slash simple="1">
                   <varRef name="bindingi" slot="6"/>
                   <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                  </slash>
                 </data>
                </cast>
                <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="boolean"/>
               </vc>
               <true/>
               <false/>
              </choose>
              <att line="323" name="type" flags="l">
               <str val="checkbox"/>
              </att>
              <true/>
              <att line="326" name="type" flags="l">
               <str val="text"/>
              </att>
             </choose>
             <choose line="329">
              <fn name="exists">
               <varRef name="hints" slot="4"/>
              </fn>
              <att line="330" name="placeholder" flags="l">
               <fn name="string-join">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <data>
                  <mergeAdj>
                   <varRef name="hints" slot="4"/>
                  </mergeAdj>
                 </data>
                </convert>
                <str val=" "/>
               </fn>
              </att>
             </choose>
             <choose line="332">
              <fn name="exists">
               <axis name="attribute" nodeTest="attribute(Q{}size)" jsTest="return item.name==='size'"/>
              </fn>
              <att line="333" name="size" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <attVal name="Q{}size" chk="0"/>
               </convert>
              </att>
             </choose>
             <att line="335" name="data-ref" flags="l">
              <varRef name="refi" slot="3"/>
             </att>
             <att line="337" name="value" flags="l">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <choose>
                 <and op="and">
                  <fn name="exists">
                   <varRef name="instance1" slot="0"/>
                  </fn>
                  <fn name="exists">
                   <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
                  </fn>
                 </and>
                 <data line="338">
                  <mergeAdj>
                   <evaluate dxns="">
                    <fn role="xpath" name="concat">
                     <varRef name="refi" slot="3"/>
                     <str val="/text()"/>
                    </fn>
                    <varRef role="cxt" name="instance1" slot="0"/>
                    <str role="sa" val="no"/>
                    <map role="wp" size="0"/>
                   </evaluate>
                  </mergeAdj>
                 </data>
                </choose>
               </convert>
               <str val=""/>
              </fn>
             </att>
            </sequence>
           </elem>
          </let>
         </sequence>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="8" flags="s" line="458" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}repeat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='repeat';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="459">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="460" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="461" name="submissions" slot="2" as="map(xs:string, xs:string)">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="462" var="context" as="element(Q{http://www.w3.org/2002/xforms}repeat)" slot="3" eval="7">
      <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
      <let line="463" var="nodeseti" as="attribute(Q{}nodeset)?" slot="4" eval="8">
       <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
       <choose line="465">
        <fn name="exists">
         <varRef name="instance1" slot="0"/>
        </fn>
        <let line="466" var="selectedRepeatVar" as="document-node()" slot="5" eval="7">
         <doc line="467" validation="preserve">
          <evaluate dxns="">
           <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
            <cvUntyped to="xs:string">
             <attVal name="Q{}nodeset" chk="0"/>
            </cvUntyped>
           </check>
           <varRef role="cxt" name="instance1" slot="0"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
         </doc>
         <choose line="470">
          <fn name="exists">
           <varRef name="selectedRepeatVar" slot="5"/>
          </fn>
          <let line="479" var="vv:v1" as="xs:untypedAtomic?" slot="6" eval="13">
           <data>
            <varRef name="nodeseti" slot="4"/>
           </data>
           <let line="475" var="vv:v0" as="element()*" slot="7" eval="4">
            <slash simple="1">
             <varRef name="context" slot="3"/>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <elem line="471" name="div" namespaces="rdf xhtml js in fn map array">
             <sequence>
              <att name="data-ref" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <attVal name="Q{}nodeset" chk="0"/>
               </convert>
              </att>
              <att name="data-count" flags="l">
               <convert from="xs:integer" to="xs:string">
                <fn name="count">
                 <slash simple="1">
                  <varRef name="selectedRepeatVar" slot="5"/>
                  <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                 </slash>
                </fn>
               </convert>
              </att>
              <forEach line="473">
               <slash simple="1">
                <varRef name="selectedRepeatVar" slot="5"/>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <elem line="475" name="div" flags="l" namespaces="rdf xhtml js in fn map array">
                <applyT bSlot="6">
                 <varRef role="select" name="vv:v0" slot="7"/>
                 <withParam name="instance1" as="node()?">
                  <varRef line="476" name="instance1" slot="0"/>
                 </withParam>
                 <withParam name="nodeset" as="xs:string">
                  <fn line="479" name="concat">
                   <varRef name="vv:v1" slot="6"/>
                   <str val="["/>
                   <fn name="position"/>
                   <str val="]"/>
                   <str val="/"/>
                  </fn>
                 </withParam>
                 <withParam name="bindings" as="map(xs:string, node())">
                  <varRef line="480" name="bindings" slot="1"/>
                 </withParam>
                 <withParam name="submissions" as="map(xs:string, xs:string)">
                  <varRef line="481" name="submissions" slot="2"/>
                 </withParam>
                </applyT>
               </elem>
              </forEach>
             </sequence>
            </elem>
           </let>
          </let>
         </choose>
        </let>
       </choose>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="3" flags="s" line="209" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="210">
     <param name="instance1" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="211" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="212" name="submissions" slot="2" as="map(xs:string, xs:string)">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <applyT line="214" flags="t" bSlot="7">
      <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      <withParam name="instance1">
       <varRef line="215" name="instance1" slot="0"/>
      </withParam>
      <withParam name="bindings" as="map(xs:string, node())">
       <varRef line="216" name="bindings" slot="1"/>
      </withParam>
      <withParam name="submissions" as="map(xs:string, xs:string)">
       <varRef line="217" name="submissions" slot="2"/>
      </withParam>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="1" minImp="0" slots="7" flags="s" line="530" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}trigger)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='trigger';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="531">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="532" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="533" name="submissions" slot="2" as="map(xs:string, xs:string)">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="534" var="innerbody" as="document-node()" slot="3" eval="7">
      <doc line="536" validation="preserve">
       <choose>
        <fn name="exists">
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
        </fn>
        <applyT line="537" bSlot="8">
         <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
         <withParam name="instance1" as="node()?">
          <varRef line="538" name="instance1" slot="0"/>
         </withParam>
         <withParam name="bindings" as="map(xs:string, node())">
          <varRef line="539" name="bindings" slot="1"/>
         </withParam>
        </applyT>
        <true/>
        <valueOf line="543" flags="l">
         <str val=" "/>
        </valueOf>
       </choose>
      </doc>
      <let line="551" var="myid" as="item()?" slot="4" eval="7">
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
        </fn>
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
        <true/>
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
        </fn>
       </choose>
       <let line="553" var="actions" as="document-node()" slot="5" eval="7">
        <doc line="556" validation="preserve">
         <elem name="action" flags="l" namespaces="rdf xhtml js in fn map array">
          <sequence>
           <choose>
            <fn name="exists">
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
            </fn>
            <copyOf line="557" flags="vc">
             <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
            </copyOf>
           </choose>
           <forEach line="561">
            <axis name="child" nodeTest="((((((((((((((((element(Q{http://www.w3.org/2002/xforms}setvalue) | element(Q{http://www.w3.org/2002/xforms}insert)) | element(Q{http://www.w3.org/2002/xforms}delete)) | element(Q{http://www.w3.org/2002/xforms}action)) | element(Q{http://www.w3.org/2002/xforms}toggle)) | element(Q{http://www.w3.org/2002/xforms}send)) | element(Q{http://www.w3.org/2002/xforms}setfocus)) | element(Q{http://www.w3.org/2002/xforms}setindex)) | element(Q{http://www.w3.org/2002/xforms}load)) | element(Q{http://www.w3.org/2002/xforms}message)) | element(Q{http://www.w3.org/2002/xforms}dispatch)) | element(Q{http://www.w3.org/2002/xforms}rebuild)) | element(Q{http://www.w3.org/2002/xforms}reset)) | element(Q{http://www.w3.org/2002/xforms}show)) | element(Q{http://www.w3.org/2002/xforms}hide)) | element(Q{http://www.w3.org/2002/xforms}script)) | element(Q{http://www.w3.org/2002/xforms}unload))" jsTest="function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='setvalue';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='insert';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='delete';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='toggle';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='send';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='setfocus';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='setindex';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='load';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='message';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='dispatch';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='rebuild';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='reset';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';};return a()||b();"/>
            <applyT line="562" mode="Q{}xforms-action" bSlot="9">
             <dot role="select" type="((((((((((((((((element(Q{http://www.w3.org/2002/xforms}setvalue) | element(Q{http://www.w3.org/2002/xforms}insert)) | element(Q{http://www.w3.org/2002/xforms}delete)) | element(Q{http://www.w3.org/2002/xforms}action)) | element(Q{http://www.w3.org/2002/xforms}toggle)) | element(Q{http://www.w3.org/2002/xforms}send)) | element(Q{http://www.w3.org/2002/xforms}setfocus)) | element(Q{http://www.w3.org/2002/xforms}setindex)) | element(Q{http://www.w3.org/2002/xforms}load)) | element(Q{http://www.w3.org/2002/xforms}message)) | element(Q{http://www.w3.org/2002/xforms}dispatch)) | element(Q{http://www.w3.org/2002/xforms}rebuild)) | element(Q{http://www.w3.org/2002/xforms}reset)) | element(Q{http://www.w3.org/2002/xforms}show)) | element(Q{http://www.w3.org/2002/xforms}hide)) | element(Q{http://www.w3.org/2002/xforms}script)) | element(Q{http://www.w3.org/2002/xforms}unload))"/>
            </applyT>
           </forEach>
          </sequence>
         </elem>
        </doc>
        <sequence line="566">
         <message>
          <sequence role="select">
           <valueOf>
            <str val=" actions ("/>
           </valueOf>
           <valueOf>
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <varRef name="myid" slot="4"/>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </valueOf>
           <valueOf>
            <str val=") = "/>
           </valueOf>
           <valueOf line="567">
            <fn name="serialize">
             <varRef name="actions" slot="5"/>
            </fn>
           </valueOf>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <choose line="568">
          <or op="or">
           <fn name="exists">
            <slash simple="1">
             <varRef name="actions" slot="5"/>
             <axis name="child" nodeTest="element(Q{}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='action';"/>
            </slash>
           </fn>
           <fn name="exists">
            <varRef name="myid" slot="4"/>
           </fn>
          </or>
          <let line="570" var="vv:v0" as="xs:anyAtomicType*" slot="6" eval="4">
           <data>
            <varRef name="myid" slot="4"/>
           </data>
           <choose>
            <fn name="exists">
             <slash>
              <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
              <fn name="key">
               <str val="Q{http://saxon.sf.net/}kk101"/>
               <varRef name="vv:v0" slot="6"/>
               <dot type="document-node()"/>
              </fn>
             </slash>
            </fn>
            <resultDoc line="571" global="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;indent=no&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xA;encoding=utf-8&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xA;omit-xml-declaration=no&#xA;method=html&#xA;" local="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
             <fn role="href" name="concat">
              <str val="#"/>
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <varRef name="myid" slot="4"/>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </fn>
             <valueOf role="content" line="572">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <fn name="xml-to-json">
                  <ufCall name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" tailCall="false" bSlot="10" eval="6">
                   <varRef name="actions" slot="5"/>
                  </ufCall>
                 </fn>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </valueOf>
            </resultDoc>
            <true/>
            <forEach line="576">
             <slash simple="1">
              <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
              <axis name="descendant" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
             </slash>
             <resultDoc line="577" global="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;indent=no&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xA;encoding=utf-8&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xA;omit-xml-declaration=no&#xA;method=html&#xA;" local="#&#xA;#Wed Oct 25 15:05:07 BST 2017&#xA;">
              <str role="href" val="?."/>
              <elem role="content" line="578" name="script" namespaces="rdf xhtml js in fn map array">
               <sequence>
                <att name="type" flags="l">
                 <str val="application/json"/>
                </att>
                <att name="id" flags="l">
                 <fn name="string-join">
                  <convert from="xs:anyAtomicType" to="xs:string">
                   <data>
                    <varRef name="myid" slot="4"/>
                   </data>
                  </convert>
                  <str val=" "/>
                 </fn>
                </att>
                <valueOf line="579" flags="l">
                 <fn name="string-join">
                  <convert from="xs:anyAtomicType" to="xs:string">
                   <data>
                    <fn name="xml-to-json">
                     <ufCall name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" tailCall="false" bSlot="11" eval="6">
                      <varRef name="actions" slot="5"/>
                     </ufCall>
                    </fn>
                   </data>
                  </convert>
                  <str val=" "/>
                 </fn>
                </valueOf>
               </sequence>
              </elem>
             </resultDoc>
            </forEach>
           </choose>
          </let>
         </choose>
         <choose line="588">
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}appearance" chk="0"/>
           <str val="minimal"/>
          </gc>
          <elem line="590" name="a" namespaces="rdf xhtml js in fn map array">
           <sequence>
            <att name="id" flags="l">
             <fn name="string-join">
              <convert from="xs:anyAtomicType" to="xs:string">
               <data>
                <varRef name="myid" slot="4"/>
               </data>
              </convert>
              <str val=" "/>
             </fn>
            </att>
            <copyOf line="591" flags="vc">
             <varRef name="innerbody" slot="3"/>
            </copyOf>
           </sequence>
          </elem>
          <true/>
          <elem line="595" name="button" namespaces="rdf xhtml js in fn map array">
           <sequence>
            <att name="type" flags="l">
             <str val="button"/>
            </att>
            <att line="596" name="id" flags="l">
             <fn name="string-join">
              <convert from="xs:anyAtomicType" to="xs:string">
               <data>
                <varRef name="myid" slot="4"/>
               </data>
              </convert>
              <str val=" "/>
             </fn>
            </att>
            <copyOf line="601" flags="vc">
             <varRef name="innerbody" slot="3"/>
            </copyOf>
           </sequence>
          </elem>
         </choose>
        </sequence>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="10" rank="1" minImp="0" slots="1" flags="s" line="428" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="429">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <elem line="432" name="label" namespaces="rdf xhtml js in fn map array">
      <choose>
       <fn name="exists">
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </fn>
       <applyT line="433" bSlot="12">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </applyT>
       <true/>
       <sequence line="435">
        <valueOf flags="l">
         <str val=" "/>
        </valueOf>
        <valueOf flags="Sl">
         <str val=""/>
        </valueOf>
       </sequence>
      </choose>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="5" rank="3" minImp="0" slots="4" flags="s" line="345" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}textarea)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='textarea';"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="346">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="347" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="348" name="nodeset" slot="2" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="2"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <applyT line="349" bSlot="13">
      <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </applyT>
     <let line="351" var="hints" as="text()*" slot="3" eval="3">
      <slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
       <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
      </slash>
      <elem line="354" name="textarea" namespaces="rdf xhtml js in fn map array">
       <sequence>
        <copyOf flags="vc">
         <filter flags="b">
          <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          <vc op="ne" comp="CCC">
           <fn name="local-name">
            <dot type="attribute()"/>
           </fn>
           <str val="ref"/>
          </vc>
         </filter>
        </copyOf>
        <att line="355" name="data-ref" flags="l">
         <fn name="concat">
          <varRef name="nodeset" slot="2"/>
          <attVal name="Q{}ref" chk="0"/>
         </fn>
        </att>
        <choose line="357">
         <and op="and">
          <fn name="exists">
           <varRef name="instance1" slot="0"/>
          </fn>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
          </fn>
         </and>
         <evaluate line="360" dxns="">
          <fn role="xpath" name="concat">
           <attVal name="Q{}ref" chk="0"/>
           <str val="/text()"/>
          </fn>
          <varRef role="cxt" name="instance1" slot="0"/>
          <str role="sa" val="no"/>
          <map role="wp" size="0"/>
         </evaluate>
         <true/>
         <sequence line="362">
          <valueOf flags="Sl">
           <str val=""/>
          </valueOf>
          <valueOf flags="l">
           <str val="  "/>
          </valueOf>
         </sequence>
        </choose>
        <choose line="365">
         <fn name="exists">
          <varRef name="hints" slot="3"/>
         </fn>
         <att line="366" name="placeholder" flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <mergeAdj>
              <varRef name="hints" slot="3"/>
             </mergeAdj>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </att>
        </choose>
       </sequence>
      </elem>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="8" rank="0" minImp="0" slots="4" flags="s" line="403" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="404">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="405" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="406" name="submissions" slot="2" as="map(xs:string, xs:string)">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <param line="408" name="nodeset" slot="3" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="3"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <copy line="410" flags="cin">
      <sequence role="content">
       <applyT bSlot="14">
        <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </applyT>
       <applyT line="411" bSlot="15">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        <withParam name="instance1" as="node()?">
         <varRef line="412" name="instance1" slot="0"/>
        </withParam>
        <withParam name="bindings" as="map(xs:string, node())">
         <varRef line="413" name="bindings" slot="1"/>
        </withParam>
        <withParam name="submissions" as="map(xs:string, xs:string)">
         <varRef line="415" name="submissions" slot="2"/>
        </withParam>
        <withParam name="nodeset" as="xs:string">
         <varRef line="416" name="nodeset" slot="3"/>
        </withParam>
       </applyT>
      </sequence>
     </copy>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="2" minImp="0" slots="0" flags="s" line="424" module="xsltforms-js.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;"/>
     <axis ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="424" name="ancestor" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="8" rank="0" minImp="0" slots="4" flags="s" line="403" module="xsltforms-js.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    <sequence role="action" ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="404">
     <param name="instance1" slot="0" as="node()?">
      <empty role="select"/>
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|instance1">
       <check card="?" diag="8|0|XTTE0590|instance1">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="405" name="bindings" slot="1" as="map(xs:string, node())">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
       <check card="1" diag="8|0|XTTE0590|bindings">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="406" name="submissions" slot="2" as="map(xs:string, xs:string)">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <param line="408" name="nodeset" slot="3" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
       <check card="1" diag="8|0|XTTE0590|nodeset">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="3"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <copy line="410" flags="cin">
      <sequence role="content">
       <applyT bSlot="14">
        <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </applyT>
       <applyT line="411" bSlot="15">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        <withParam name="instance1" as="node()?">
         <varRef line="412" name="instance1" slot="0"/>
        </withParam>
        <withParam name="bindings" as="map(xs:string, node())">
         <varRef line="413" name="bindings" slot="1"/>
        </withParam>
        <withParam name="submissions" as="map(xs:string, xs:string)">
         <varRef line="415" name="submissions" slot="2"/>
        </withParam>
        <withParam name="nodeset" as="xs:string">
         <varRef line="416" name="nodeset" slot="3"/>
        </withParam>
       </applyT>
      </sequence>
     </copy>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk101" line="0" binds="" flags="u">
  <p.nodeSet type="element(Q{}script)">
   <axis ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="101" name="descendant" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
  </p.nodeSet>
  <attVal ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="101" name="Q{}id" chk="0"/>
 </key>
 <key name="Q{http://saxon.sf.net/}kk102" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="886" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xsl=~ xforms=http://www.w3.org/2002/xforms rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# in=http://www.w3.org/2002/xforms-instance array=http://www.w3.org/2005/xpath-functions/array fn=~ js=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="886" name="Q{}data-ref" chk="0"/>
 </key>
 <output>
  <property name="indent" value="no"/>
  <property name="doctype-system" value="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"/>
  <property name="encoding" value="utf-8"/>
  <property name="doctype-public" value="-//W3C//DTD XHTML 1.0 Transitional//EN"/>
  <property name="omit-xml-declaration" value="no"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="html"/>
 </output>
 <decimalFormat/>
</package>
<?Σ ff1312ad?>
